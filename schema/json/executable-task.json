{
  "$id": "https://purl.org/ep.ivoa.net/schema/json/executable-task",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "anyOf": [
    {
      "$ref": "#/definitions/GenericExecutableTask"
    },
    {
      "$ref": "#/definitions/JupyterExecutableTask"
    },
    {
      "$ref": "#/definitions/BinderExecutableTask"
    }
  ],
  "properties": {},
  "unevaluatedProperties": false,
  "definitions": {
    "UUIDType": {
      "type": "string",
      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
      "description": "A regular expression to match the syntax for a UUID as defined by RFC4122. Note this is no longer needed as the string format for 'uuid' was added in JSON schema 2019-09."
    },
    "ISO8601DurationType": {
      "type": "string",
      "pattern": "^P([0-9]+Y){0,1}([0-9]+M){0,1}([0-9]+D){0,1}(T([0-9]+H){0,1}([0-9]+M){0,1}([0-9]+S){0,1}){0,1}$",
      "description": "A regular expression to match the syntax for a time duration as defined by ISO 8601. Note this is no longer needed as the string format for 'duration' was added in JSON schema 2019-09."
    },
    "ISO8601DateTimeType": {
      "type": "string",
      "pattern": "^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2}(\\.[0-9]{1,}){0,1})$",
      "description": "A regular expression to match the syntax for a date time value as defined by ISO 8601. "
    },
    "BasicComplexType": {
      "type": "object",
      "properties": {
        "uuid": {
          "$ref": "#/definitions/UUIDType",
          "description": "A globally unique UUID (Universal Unique Identifier) for the component."
        },
        "type": {
          "type": "string",
          "format": "uri",
          "description": "A machine readable URI identifying the component type. Any URI format may be used, but it is recomended to use a URL format that can be resolved to point to a resource that describes the type."
        },
        "title": {
          "type": "string",
          "description": "An optional human readable title for the component."
        },
        "description": {
          "type": "string",
          "description": "An optional human readable description of the component."
        }
      },
      "required": [
        "type",
        "uuid"
      ],
      "description": "A base class to include a standard set of properties in all our complex types."
    },
    "BaseVolumeSpec": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The filesystem location of the volume as seen from inside the execution environment."
        },
        "access": {
          "enum": [
            "READONLY",
            "READWRITE"
          ],
          "description": "The filesystem access mode of the volume, as seen from inside the execution environment."
        }
      },
      "required": [
        "path"
      ],
      "description": "A base class for volume specifications, providing a common set of properties."
    },
    "LocalVolumeSpec": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseVolumeSpec"
        }
      ],
      "properties": {
        "minsize": {
          "type": "integer",
          "description": "The minimum size of the volume in GiB (2^30) bytes. This is typically set by the client to indicate the minimum space required to execute the task."
        },
        "maxsize": {
          "type": "integer",
          "description": "The maximum size of the volume in GiB (2^30) bytes. This is typically set by the service to indicate the maximum space available for the task to use."
        }
      },
      "description": "A local volume associated with a ComputeResource. Typically this would be allocated by the orchestration system as part of the ComputeResource and would have the same lifetime as the ComputeResource."
    },
    "ResourceVolumeRef": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseVolumeSpec"
        }
      ],
      "properties": {
        "resource": {
          "$ref": "#/definitions/UUIDType",
          "description": "The UUID of the target resource."
        }
      },
      "description": "A volume specification that references a DataResource or StorageResource using the UUID of the target resource."
    },
    "DataResourceType": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicComplexType"
        }
      ],
      "properties": {
        "url": {
          "type": "string",
          "format": "url"
        },
        "mime-type": {
          "type": "string",
          "description": "The primary MIME type of the data resource. TODO - we need to discuss how to handle MIME types for compound objects. For exampl;e what is the MIME type of a tar.gzip file of images?"
        },
        "data-type": {
          "type": "string",
          "description": "The primary data type of the resource. TODO - we need to discuss what vocabularies to use for this."
        }
      },
      "description": "An external data resource that is linked to a ResourceVolume by the orchestration system, making it appear as part of the filesystem inside the execution environment. TODO - this has two meanings, a request for some data and the actual resource that provides it."
    },
    "StorageResourceType": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicComplexType"
        }
      ],
      "properties": {
        "minsize": {
          "type": "integer",
          "description": "The minimum size in GiB (2^30) bytes. This is typically set by the client to indicate the minimum space required to store the data."
        },
        "maxsize": {
          "type": "integer",
          "description": "The maximum size in GiB (2^30) bytes. This is typically set by the service to indicate the maximum space available for use."
        },
        "minlifetime": {
          "type": "string",
          "format": "duration",
          "description": "The minimum lifetime of the storage resource, expressed as an ISO8601 duration. This would typically be set by the client to indicate how long the user wants to store the data for."
        },
        "maxlifetime": {
          "type": "string",
          "format": "duration",
          "description": "The maximum lifetime of the storage resource, expressed as an ISO8601 duration. This would typically be set by the service to indicate how long the data will be stored for."
        },
        "latency": {
          "enum": [
            "LOW",
            "MEDIUM",
            "HIGH"
          ],
          "description": "The latency for random access read/write operations. TODO this needs more discussion, should we have a numeric value in ms, or are the general 'LOW, MEDIUM, HIGH' values enough."
        },
        "bandwidth": {
          "enum": [
            "LOW",
            "MEDIUM",
            "HIGH"
          ],
          "description": "The bandwidth for random access read/write operations. TODO this needs more discussion, should we have a numeric value in ms, or are the general 'LOW, MEDIUM, HIGH' values enough."
        }
      },
      "description": "A storage resource, provided by the orchestration system but separate from the individual compute resources. An example would be space on a shared CephFS storage systen that persists beyond the end of the task execution."
    },
    "NetworkPortSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/BasicComplexType"
        }
      ],
      "properties": {
        "port": {
          "type": "integer",
          "description": "The network port number."
        },
        "scope": {
          "enum": [
            "private",
            "public"
          ],
          "description": "A flag to indicate if this network port is restricted to a private network or is accessible from the public internet."
        }
      }
    },
    "ComputeResourceType": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicComplexType"
        }
      ],
      "properties": {
        "instances": {
          "type": "integer",
          "description": "The number of instances of this compute resource. This makes it easier to define a cluster of multiple worker nodes by defining a single resource with multiple instances.",
          "default": 1
        },
        "hostname": {
          "type": "string",
          "description": "The hostname associated with this compute resource."
        },
        "mincores": {
          "type": "integer",
          "description": "The minimum number of CPU cores required to execute the task in a reasonable timeframe.",
          "default": 1
        },
        "maxcores": {
          "type": "integer",
          "description": "The maximum number of CPU cores on this compute resorce. This would typically be set by the service to indicate the maximum numnber of cores available for use by this task."
        },
        "minmemory": {
          "type": "integer",
          "description": "The minimum amount of memory in GiB (2^30) bytes. This is typically set by the client to indicate the minimum amount of memory required on this ComputeResource to execute the task.",
          "default": 1
        },
        "maxmemory": {
          "type": "integer",
          "description": "The maximum amount of memory GiB (2^30) bytes. This is typically set by the service to indicate the maximum amount of memory available on this ComputeResource."
        },
        "local-volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalVolumeSpec"
          },
          "description": "A list of LocalVolumes attached to this ComputeResource."
        },
        "storage-volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceVolumeRef"
          },
          "description": "A list of StorageVolumes attached to this ComputeResource."
        },
        "data-volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceVolumeRef"
          },
          "description": "A list of DataVolumes attached to this ComputeResource."
        },
        "network-ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkPortSpec"
          },
          "description": "A list of NetworkPorts connected to this ComputeResource."
        }
      },
      "description": "An instance of a computing resource. Typically this would map to an individual virtual machine in a cloud computing platforms."
    },
    "ComputePlatformType": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicComplexType"
        }
      ],
      "properties": {},
      "description": "A description of the computing platform where the task would be executed. In most cases this would be provided by the service to help users select which platform to use. TODO Do we need to add more machine-readable properties to this ?"
    },
    "UserInterfaceType": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicComplexType"
        }
      ],
      "properties": {
        "netport": {
          "$ref": "#/definitions/UUIDType",
          "description": "The UUID of the ComputeResource NetworkPort connected to this interface."
        }
      }
    },
    "GenericExecutableTask": {
      "description": "A generic executable task, including details of the resources required to execute it.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicComplexType"
        }
      ],
      "properties": {
        "minduration": {
          "type": "string",
          "format": "duration",
          "description": "The minimum duration of the task, expressed as an ISO8601 duration. This would typically be set by the client to indicate how long the user wants to use the resources for.",
          "default": "P1H"
        },
        "maxduration": {
          "type": "string",
          "format": "duration",
          "description": "The maximum duration of the task, expressed as an ISO8601 duration. This would typically be set by the service to indicate how long the resources will be available for."
        },
        "data-resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataResourceType"
          },
          "description": "A list of DataResources required to execute this task."
        },
        "compute-resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputeResourceType"
          },
          "description": "A list of ComputeResources required to execute this task."
        },
        "storage-resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageResourceType"
          },
          "description": "A list of StorageResources required to execute this task."
        },
        "interactive": {
          "type": "boolean",
          "title": "A flag to indicate if this task requires interactive user input or if it can be run unattended."
        },
        "user-interfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInterfaceType"
          },
          "description": "A list of UserInterfaces associated with this task."
        }
      }
    },
    "GenericExecutionService": {
      "description": "A generic execution service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicComplexType"
        }
      ],
      "properties": {
        "service": {
          "description": "Details of the service, including how to connect to it.",
          "type": "object",
          "properties": {
          }
        }
      }
    },
    "JupyterExecutableTask": {
      "description": "A Jupyter notebook with no additional dependencies.\nSee [https://jupyter.org/].",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GenericExecutableTask"
        }
      ],
      "properties": {
        "type": {
          "const": "https://purl.org/esap.escape.eu/task-type/jupyter-notebook"
        },
        "task": {
          "type": "object",
          "properties": {
            "notebook-url": {
              "description": "The URL of the notebook to execute.",
              "type": "string",
              "format": "url"
            }
          }
        }
      }
    },
    "JupyterRestService": {
      "description": "A reference to the REST interface of a Jupyter notebook service.\nSee [https://jupyter.org/].",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GenericExecutionService"
        }
      ],
      "properties": {
        "type": {
          "const": "https://purl.org/esap.escape.eu/service-type/jupyter-rest"
        },
        "service": {
          "type": "object",
          "properties": {
            "endpoint": {
              "description": "The REST service endpoint URL.",
              "type": "string",
              "format": "url"
            }
          }
        }
      }
    },
    "BinderExecutableTask": {
      "description": "A Binder compatible notebook task.\nSee [https://mybinder.org/]",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GenericExecutableTask"
        }
      ],
      "properties": {
        "type": {
          "const": "https://purl.org/esap.escape.eu/task-type/binder-notebook"
        },
        "task": {
          "type": "object",
          "properties": {
            "repository-type": {
              "description": "The type of Binder reference",
              "enum": [
                "github",
                "gitlab",
                "zenodo"
              ]
            },
            "repository-url": {
              "type": "string",
              "format": "url",
              "description": "The URL of the git repository"
            },
            "repository-doi": {
              "type": "string",
              "description": "The DOI of the Zenodo entryrepository"
            },
            "path": {
              "type": "string",
              "description": "The location of the notebook in the repository"
            }
          }
        }
      }
    },
    "BinderRestService": {
      "description": "A reference to the REST interface of a BinderHub service.\nSee [https://mybinder.org/].",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GenericExecutionService"
        }
      ],
      "properties": {
        "type": {
          "const": "https://purl.org/esap.escape.eu/service-type/binder-rest"
        },
        "service": {
          "type": "object",
          "properties": {
            "endpoint": {
              "description": "The REST service endpoint URL.",
              "type": "string",
              "format": "url"
            }
          }
        }
      }
    },
  }
}
